import {
	Dialog,
	DialogContent,
	DialogHeader,
	DialogTitle,
	DialogDescription,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import jsPDF from "jspdf";
import "jspdf-autotable";
import { Separator } from "@/components/ui/separator";

export function InvoiceModal({ open, onClose, invoice }) {
	const handleDownload = () => {
		const doc = new jsPDF();

		doc.setFont("helvetica", "bold");
		doc.setFontSize(22);
		doc.setTextColor(40);
		doc.text("Maintenance Invoice", 105, 20, { align: "center" });

		doc.setFont("helvetica", "normal");
		doc.setFontSize(12);
		doc.setTextColor(100);
		doc.text("Generated by XYZ Maintenance System", 105, 28, {
			align: "center",
		});

		doc.setDrawColor(200);
		doc.line(10, 32, 200, 32);

		const columns = ["Field", "Value"];
		const rows = [
			["Invoice ID", invoice.invoiceId],
			["Owner Name", invoice.ownerName],
			["Bill Date", invoice.billDate],
			["Payment Date", invoice.paymentDate],
			["Phone Number", invoice.phoneNumber],
			["Email", invoice.email],
			["Address", invoice.address],
			["Maintenance Amount", `$${invoice.maintenanceAmount}`],
			["Pending Amount", `$${invoice.pendingAmount}`],
			[
				"Grand Total",
				`$${(
					parseFloat(invoice.maintenanceAmount) +
					parseFloat(invoice.pendingAmount)
				).toFixed(2)}`,
			],
			["Note", invoice.note || "No additional notes provided"],
		];

		// Generate Table
		doc.autoTable({
			head: [columns],
			body: rows,
			startY: 40,
			theme: "grid",
			styles: {
				fontSize: 12,
				cellPadding: 5,
				lineColor: [200, 200, 200],
				lineWidth: 0.1,
			},
			headStyles: {
				fillColor: [34, 112, 147],
				textColor: [255, 255, 255],
				fontSize: 12,
				fontStyle: "bold",
			},
			bodyStyles: {
				textColor: [40, 40, 40],
			},
			alternateRowStyles: {
				fillColor: [240, 248, 255],
			},
		});

		const pageHeight = doc.internal.pageSize.height;
		doc.setFont("helvetica", "italic");
		doc.setFontSize(10);
		doc.setTextColor(120);
		doc.text(
			`Generated on: ${new Date().toLocaleDateString()} | Invoice ID: ${
				invoice.invoiceId
			}`,
			10,
			pageHeight - 10
		);
		doc.text("Thank you for your payment!", 200, pageHeight - 10, {
			align: "right",
		});

		doc.save(`Maintenance_Invoice_${invoice.invoiceId}.pdf`);
	};

	return (
		<Dialog open={open} onOpenChange={onClose}>
			<DialogContent className="max-w-md bg-white rounded-lg w-[300px] md:w-full shadow-lg p-2 md:p-6">
				<DialogHeader className="p-0 md:p-6">
					<DialogTitle className="text-base md:text-xl font-bold text-start text-gray-800 mb-1 md:mb-3 ">
						Maintenance Invoice
					</DialogTitle>
					<Separator />
					<DialogDescription className="space-y-10 text-start">
						<div className="grid grid-cols-2 gap-x-6 gap-y-4 mt-5 bg-gray-50 p-2 md:p-4 rounded-lg">
							<div>
								<p className="text-xs md:text-sm text-gray-500">
									Invoice ID
								</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.invoiceId}
								</p>
							</div>
							<div>
								<p className="text-xs md:text-sm text-gray-500">
									Owner Name
								</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.ownerName}
								</p>
							</div>
							<div>
								<p className="text-xs md:text-sm text-gray-500">
									Bill Date
								</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.billDate}
								</p>
							</div>
							<div>
								<p className="text-xs md:text-sm text-gray-500">
									Payment Date
								</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.paymentDate}
								</p>
							</div>
							<div>
								<p className="text-xs md:text-sm text-gray-500">
									Phone Number
								</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.phoneNumber}
								</p>
							</div>
							<div className="col-span-2">
								<p className="text-xs md:text-sm text-gray-500">Email</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.email}
								</p>
							</div>
							<div className="col-span-2">
								<p className="text-xs md:text-sm text-gray-500">Address</p>
								<p className="text-sm md:text-base font-medium text-gray-800">
									{invoice.address}
								</p>
							</div>
						</div>

						<div className="bg-gray-50 p-4 rounded-lg shadow-sm space-y-2">
							<div className="grid grid-cols-2">
								<p className="text-xs md:text-sm font-medium text-gray-700">
									Maintenance Amount
								</p>
								<p className="text-sm md:text-base font-medium text-green-600 text-right">
									₹ {invoice.maintenanceAmount}
								</p>
							</div>
							<div className="grid grid-cols-2">
								<p className="text-xs md:text-sm font-medium text-gray-700">
									Penalty
								</p>
								<p className="text-sm md:text-base font-medium text-red-500 text-right">
									₹ {invoice.pendingAmount}
								</p>
							</div>
							<Separator />
							<div className="grid grid-cols-2 pt-2 mt-2">
								<p className="text-xs md:text-sm font-semibold text-gray-900">
									Grand Total
								</p>
								<p className="text-sm md:text-base font-semibold text-gray-900 text-right">
									₹{" "}
									{(
										parseFloat(invoice.maintenanceAmount) +
										parseFloat(invoice.pendingAmount)
									).toFixed(2)}
								</p>
							</div>
						</div>

						<div className="bg-gray-50 p-2 md:p-4 rounded-lg">
							<p className="text-xs md:text-sm  text-gray-500">Note</p>
							<p className="text-sm md:text-base font-medium text-gray-800">
								{invoice.note ||
									"No additional notes provided."}
							</p>
						</div>

						<div>
							<Button
								onClick={handleDownload}
								className="w-full py-1 md:py-3 rounded-lg font-medium shadow-md bg-blue-500 text-white hover:bg-blue-600"
							>
								Download Invoice
							</Button>
						</div>
					</DialogDescription>
				</DialogHeader>
			</DialogContent>
		</Dialog>
	);
}
